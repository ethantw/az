// Generated by LiveScript 1.3.1
(function(){
  var fs, ref$, unique, filter, Sound, CSLD, i$, len$, heteronyms, title, bopomofo, Revised, replace$ = ''.replace;
  fs = require('fs');
  ref$ = require('prelude-ls'), unique = ref$.unique, filter = ref$.filter;
  Sound = JSON.parse(fs.readFileSync('Sound.json'));
  CSLD = JSON.parse(fs.readFileSync('/Users/audreyt/w/moedict-data-csld/dict-csld.json'));
  for (i$ = 0, len$ = CSLD.length; i$ < len$; ++i$) {
    ref$ = CSLD[i$], heteronyms = ref$.heteronyms, title = ref$.title;
    if (title.length === 1 && !Sound[title]) {
      Sound[title] = unique((fn$()));
    }
  }
  Revised = JSON.parse(fs.readFileSync('/Users/audreyt/w/moedict-webkit/moedict-data/dict-revised.json'));
  for (i$ = 0, len$ = CSLD.length; i$ < len$; ++i$) {
    ref$ = CSLD[i$], heteronyms = ref$.heteronyms, title = ref$.title;
    if (title.length === 1 && !Sound[title]) {
      Sound[title] = filter(fn1$, unique((fn2$())));
    }
  }
  console.log(JSON.stringify(Sound, void 8, 2));
  function fn$(){
    var i$, ref$, len$, results$ = [];
    for (i$ = 0, len$ = (ref$ = heteronyms).length; i$ < len$; ++i$) {
      bopomofo = ref$[i$].bopomofo;
      results$.push(replace$.call(bopomofo, /<br>.*/, ''));
    }
    return results$;
  }
  function fn1$(it){
    return it.length;
  }
  function fn2$(){
    var i$, ref$, len$, results$ = [];
    for (i$ = 0, len$ = (ref$ = heteronyms).length; i$ < len$; ++i$) {
      bopomofo = ref$[i$].bopomofo;
      results$.push(replace$.call(bopomofo, /<br>.*/, ''));
    }
    return results$;
  }
}).call(this);
